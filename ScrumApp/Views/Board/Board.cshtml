@using ScrumApp.Utilities
@using System.Web;
@model ScrumApp.Models.Board

@{
    ViewData["Title"] = "Board";
}

<head>

    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="google" value="notranslate" />
    <title>Side Menu</title>

    <link rel="stylesheet" type="text/css" href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css">
    <link rel="stylesheet" href="~/css/chat.css" />


    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

    <link href="https://unpkg.com/material-components-web@v4.0.0/dist/material-components-web.min.css" rel="stylesheet">
    <script src="https://unpkg.com/material-components-web@v4.0.0/dist/material-components-web.min.js"></script>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">

</head>



@section outOfContainer{
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3 second-nav">
        <div class="container-fluid">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">

                <ul class="navbar-nav ml-auto" style="margin:0;padding:0;">

                    <li class="nav-item pull-right" style="margin:0;padding:0;">
                        <a id="invite-users-btn" class="text-dark" asp-route-userSlug="@Model.Project.Author.UserName" asp-route-projectSlug="@Model.Project.Slug" asp-controller="invitations">
                            <span style="margin-right:.5rem;font-weight: 600;">Invite user</span> <span style="font-size:19px!important;" class="material-icons text-dark">person_add</span>
                        </a>
                    </li>
                </ul>

                <ul class="navbar-nav flex-grow-1">

                    @foreach (var board in ViewBag.boards)
                    {

                        <li class="nav-item @Html.IsBoardActive("Board", "Board", (string)board.BoardSlug)">
                            <a class="nav-link text-dark" asp-route-userSlug="@board.Project.Author.UserName" asp-route-projectSlug="@board.Project.Slug" asp-route-boardSlug="@board.BoardSlug">@board.BoardName</a>
                        </li>
                    }
                    <li class="nav-item">
                        <a id="create-board" asp-action="Create"><span class="fas fa-plus"></span>   Add Board</a>
                    </li>

                </ul>

            </div>
        </div>
    </nav>
}

<div class="view-content full-height">


    <div class="row no-stack full-height" style="position:relative" id="sortable">

        <div class="popup hide">
            <div class="popup-container">
                <form asp-controller="Invitations" asp-action="InviteMany" method="post">
                    @Html.AntiForgeryToken()


                    <div class="pull-right" id="add-email"><span class="fas fa-plus"></span> Add another </div>
                    <a id="submit-email-invitation" style="cursor:pointer">Invite</a>

                </form>
            </div>
        </div>

        @foreach (var boardColumn in Model.BoardColumns)
        {


            <div class="col-2 mb-4 this-is-cool" id="@boardColumn.BoardColumnId">
                <div class="card h-100 column-style">
                    <div class="card-header" style="font-weight:600;" id="draggable">
                        @boardColumn.BoardColumnName
                    </div>

                    <div class="card-body inner-column-style" style="overflow-y:auto;overflow-x:hidden">

                        <div id="x_@boardColumn.BoardColumnId" class="story-list">
                            @foreach (var story in boardColumn.Stories)
                            {
                                <div class="col-sm-12 sortable-story" style="padding:0;margin-bottom:1.25rem" id="story_@story.StoryId">
                                    <div class="card story-style">
                                        <div class="tt">
                                            <span style="cursor:pointer;color:gray" class="fas fa-edit"></span>
                                        </div>
                                        <div class="card-body">
                                            <h6 class="card-title story-handle" style="cursor: pointer">@story.StoryTitle</h6>

                                        </div>
                                        <hr />

                                        <div style="width:100%;height:2rem;">
                                            @using Microsoft.AspNetCore.Identity
                                            @using ScrumApp.Models
                                            @inject UserManager<AppUser> userManager
                                            @{
                                                var user = await userManager.FindByNameAsync(User.Identity.Name);

                                            }
                                            @if (story.UserStories.Count == 0)
                                            {
                                                <a asp-controller="Story" asp-action="AssignToStory" asp-route-id="@story.StoryId" id="tackle" style="cursor:pointer" class="material-icons d-sm-inline-flex flex-sm-row-reverse">add_circle_outline</a>
                                            }
                                            else
                                            {
                                                double offset = 0;
                                                bool first = true;
                                                foreach (var userStory in story.UserStories)
                                                {

                                                    if (first == false)
                                                    {
                                                        <img src="~/media/Users/@userStory.AppUser.ProfilePicture" class="story-profil-img img-offset">
                                                        offset += 1.2;
                                                    }
                                                    else
                                                    {
                                                        <img src="~/media/Users/@userStory.AppUser.ProfilePicture" class="story-profil-img">
                                                    }



                                                    first = false;
                                                }
                                                string o = @offset.ToString().Replace(",", ".") + "rem";



                                                var x = story.UserStories.Where(x => x.AppUser == user).Where(x => x.Story == story).FirstOrDefault();
                                                <div class="wowowow pull-right" style="display:none;left:@o; padding:0;margin:0;position:relative;">
                                                    @if (x == null)
                                                    {
                                                        <a asp-controller="Story" asp-action="AssignToStory" asp-route-id="@story.StoryId" id="tackle" style="cursor:pointer;left:@o;" class="material-icons d-sm-inline-flex flex-sm-row-reverse pull-right">add_circle_outline</a>
                                                    }
                                                    else
                                                    {
                                                        <a asp-controller="Story" asp-action="DissociateToStory" asp-route-id="@story.StoryId" id="tackle" style="cursor:pointer;left:@o;" class="material-icons d-sm-inline-flex flex-sm-row-reverse pull-right">remove_circle_outline</a>
                                                    }
                                                </div>
                                            }
                                        </div>

                                    </div>

                                </div>

                            }
                            <p id="lala"></p>

                        </div>

                        <!--<a style="color:#343a40!important; font-weight:600" asp-route-userSlug="@Model.Project.Author.UserNameSlug" asp-route-projectSlug="@Model.Project.Slug" asp-route-boardSlug="@Model.BoardSlug" asp-controller="Story" asp-action="Create"><span class="fas fa-plus"></span>   Add Story</a>-->
                        <a class="open" id="load_@boardColumn.BoardColumnId" style="color:#343a40!important; font-weight:600; cursor:pointer"><span class="fas fa-plus"></span>   Add a story</a>
                        <div class="hide" id="view_@boardColumn.BoardColumnId">
                            <partial name="_StoryFormPartial" model='new CreateStory { BoardColumnId = @boardColumn.BoardColumnId}'>

                        </div>

                    </div>

                </div>
            </div>
        }
        <div class="col-2 mb-2">
            <a style="color:#343a40!important; font-weight:600" asp-route-userSlug="@Model.Project.Author.UserNameSlug" asp-route-projectSlug="@Model.Project.Slug" asp-route-boardSlug="@Model.BoardSlug" asp-controller="BoardColumn" asp-action="Create"><span class="fas fa-plus"></span>   Add Column</a>
        </div>
    </div>

</div>




<div id="live-chat">
    <header id="clearfix">
        <h4>@Model.Project.ProjectName</h4>
    </header>

    <div class="hide" id="chatbox-content">

        <ul style="margin-bottom:0;margin-top:0;padding-top:0;padding-bottom:0;padding-left:0;padding-right:0;" id="messagesList">
        </ul>



        <div class="chat-controls">
            <textarea id="messageInput" class="chat-controls__textarea" rows="2" placeholder="Type your message"></textarea>
            <div class="btns-row">
                <a href="#" class="chat-controls__btn" id="sendButton">Send</a>
            </div>
        </div>

    </div>
</div>








@section Scripts{

    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/chat.js"></script>

    <script>
        @inject UserManager<AppUser> userManager
        @{
            var user = await userManager.FindByNameAsync(User.Identity.Name);
        }

        var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();

        document.getElementById("sendButton").disabled = true;

        connection.on("ReceiveMessage", function (message, user, userId, userImg) {

            var usr = user.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            var encodedMsg = msg;

            var li = createMessageDOM('@user.Id', user, userId, userImg, encodedMsg);
            document.getElementById("messagesList").appendChild(li);

            if (document.getElementById("chatbox-content").classList.contains("hide")) {
                console.log("notification!!!!");
            }

        });

        connection.start().then(function () {

            document.getElementById("sendButton").disabled = false;

            var projectId = '@Model.Project.ProjectId';
            var group = 'group_' + projectId;


            connection.invoke("JoinGroup", group).catch(function (err) {
                return console.error(err.toString());
            });


        }).catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("sendButton").addEventListener("click", function (event) {

            var message = document.getElementById("messageInput").value;

            var projectId = '@Model.Project.ProjectId';
            var userName = "@user.FirstName @user.LastName";
            var userId = "@user.Id";
            var userImg = "@user.ProfilePicture";
            var group = 'group_' + projectId;


            connection.invoke("SendMessageToGroup", group, message, userName, userId, userImg).catch(function (err) {
                return console.error(err.toString());
            });

            document.getElementById("messageInput").value = "";

            event.preventDefault();
        });

        window.onbeforeunload = function () {

            var projectId = '@Model.Project.ProjectId';
            var group = 'group_' + projectId;

            connection.invoke("LeaveGroup", group).catch(function (err) {
                return console.error(err.toString());
            });
        };







        document.getElementById("clearfix").addEventListener("click", function (event) {

            if (document.getElementById("chatbox-content").classList.contains("hide")) {
                document.getElementById("chatbox-content").classList.remove("hide");
            }
            else {
                document.getElementById("chatbox-content").classList.add("hide");
            }
        })






        $("#submit-email-invitation").on('click', function (event) {

            var projectName = '@Model.Project.Slug';
            var projectAuthor = '@Model.Project.Author.UserNameSlug';
            var url = "/" + projectAuthor + "/" + projectName + "/Invitations/InviteMany"

            var token = $("[name='__RequestVerificationToken']").val();

            var headers = {};
            headers['Accept'] = "application/json";
            headers['__RequestVerificationToken'] = token;
            headers['RequestVerificationToken'] = token;

            let es = $('.email-field').map(function () {
                return $(this).val();
            }).get()


            jQuery.ajaxSettings.traditional = true

            $.ajax({
                type: "POST",
                url: url,
                headers: headers,
                data: { emails: es },

            });

            $(".popup").addClass("hide");
            $(".email-field").remove();
        });


        $("#add-email").on('click', function () {
            $('<input type="text" placeholder="Email Adress..." class="sb-textfield email-field" />').insertBefore("#add-email");
        })

        $("#invite-users-btn").on('click', function (event) {
            event.preventDefault();

            if ($(".popup").hasClass("hide")) {

                $('<input type="text" placeholder="Email Adress..." class="sb-textfield email-field" />').insertBefore("#add-email");
                $(".popup").removeClass("hide");
            }
            else {

                $(".popup").addClass("hide");
                $(".email-field").remove();
            }
        });

        $(".sortable-story").hover(function () {
            $(this.firstElementChild.firstElementChild).fadeToggle(200);
            $(this).find(".wowowow").fadeToggle(200);
          });

        $('.story-list').sortable({
            connectWith: ".story-list",
            placeholder: "ui-state-highlight",
            forcePlaceholderSize: true,
            revert: true,
            stop: function (event, ui) {

                columnId = $(ui.item[0].parentElement).attr('id');
                storyId = $(ui.item[0]).attr('id').slice(6);

                var ids = $('#' + columnId).find('.sortable-story').map(function () {
                    return this.id.slice(6);
                }).get();

                let jsonString = JSON.stringify(ids);

                let url = "/Story/reorder/" + columnId.slice(2);

                jQuery.ajaxSettings.traditional = true

                $.post(url, {vals: ids}, function () { });

            }

        });



        $("#sortable").sortable({
            handle: '.card-header',
            placeholder: "ui-state-highlight",
            forcePlaceholderSize:true,
            revert: true,

            update: function () {

                let ids = $('.this-is-cool').map(function(){
                    return this.id;
                }).get()

                let jsonString = JSON.stringify(ids);

                var x = $("#sortable").serializeArray();

                let url = "/BoardColumn/reorder/"+@Model.BoardId;
                jQuery.ajaxSettings.traditional = true

                $.post(url, {vals: ids}, function () { });
            }
        });

        $('.card-body .open').click(function (evt) {
            load_id = evt.target.id;
            id = load_id.slice(5)
            view_id = "view_" + id;

            if ($("#" + view_id).hasClass("hide")) {
                $("#" + view_id).removeClass("hide")
                $("#" + load_id).addClass("hide")
            }
            else {
                $("#" + view_id).addClass("hide")
                $("#" + load_id).removeClass("hide")

            }

        });

        $('.form-group a').click(function (evt) {
            close_form_id = evt.target.id;
            id = close_form_id.slice(11);


            view_id = "view_" + id;
            load_id = "load_" + id;

            $("#" + view_id).addClass("hide");
            $("#" + load_id).removeClass("hide");

        });
    </script>
}